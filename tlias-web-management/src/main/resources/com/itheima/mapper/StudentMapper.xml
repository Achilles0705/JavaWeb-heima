<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.StudentMapper">

    <resultMap id="StudentResultMap" type="com.itheima.pojo.Student">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="no" column="no"/>
        <result property="gender" column="gender"/>
        <result property="phone" column="phone"/>
        <result property="idCard" column="id_card"/>
        <result property="isCollege" column="is_college"/>
        <result property="address" column="address"/>
        <result property="degree" column="degree"/>
        <result property="graduationDate" column="graduation_date"/>
        <result property="clazzId" column="clazz_id"/>
        <result property="violationCount" column="violation_count"/>
        <result property="violationScore" column="violation_score"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <!--映射clazzName-->
        <result property="clazzName" column="clazz_name"/>
    </resultMap>

    <insert id="insert">
        insert into student(name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, create_time, update_time)
        values (#{name}, #{no}, #{gender}, #{phone}, #{idCard}, #{isCollege}, #{address}, #{degree}, #{graduationDate}, #{clazzId}, #{createTime}, #{updateTime})
    </insert>

    <update id="updateById">
        update student
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="no != null and no != ''">no = #{no},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="degree != null and degree != ''">degree = #{degree},</if>
            <if test="idCard != null">id_card = #{idCard},</if>
            <if test="isCollege != null">is_college = #{isCollege},</if>
            <if test="address != null">address = #{address},</if>
            <if test="graduationDate != null">graduation_date = #{graduationDate},</if>
            <if test="violationCount != null and violationCount != ''">violation_count = #{violationCount},</if>
            <if test="violationScore != null and violationScore != ''">violation_score = #{violationScore},</if>
            <if test="clazzId != null and clazzId != ''">clazz_id = #{clazzId},</if>
        </set>
        where id = #{id}
    </update>

    <update id="updateViolation">
        update student
        set violation_count = violation_count + 1,
            violation_score = violation_score + #{score}
        where id = #{id}
    </update>

    <delete id="deleteByIds">
        delete from student where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
        #{id}
        </foreach>
    </delete>

    <select id="list" resultMap="StudentResultMap">
        select s.*, c.name as clazz_name
        from student s left join clazz c on c.id = s.clazz_id
    </select>

    <!--根据ID查询学生的详细信息-->
    <select id="getById" resultType="com.itheima.pojo.Student">
        select s.* from student s left join clazz c on c.id = s.clazz_id
                 where s.id = #{id}
    </select>

    <!--学员学历统计-->
    <select id="countStudentDegreeData" resultType="java.util.Map">
        select
            (case degree when 1 then '初中'
                         when 2 then '高中'
                         when 3 then '大专'
                         when 4 then '本科'
                         when 5 then '硕士'
                         when 6 then '博士'
                         else '其他' end) as name,
            count(*) as value
        from student group by degree
    </select>

    <!--班级人数统计-->
    <select id="getStudentCount" resultType="java.util.Map">
        select c.name as name, count(*) as num
        from student s left join clazz c on s.clazz_id = c.id
        group by clazz_id
        order by num
    </select>

</mapper>
